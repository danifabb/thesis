citation("ggplot2") 

Sys.setenv(LANG = "en")


licor_1 <- read.csv("data/final_version_with_comment_1a - Copia.csv", sep = ";", header = TRUE, dec =",")
licor_1$treatment <- factor(licor_1$treatment) 

# A/Ci column 
licor_1$A.Ci <- licor_1$A/licor_1$Ci

# let's remove outliers
licor_2 <- subset(licor_1, licor_1$comment != "outlier")

#calculating average of the three values per leaf
library(dplyr)

licor_avg_1 <- licor_2%>%
  group_by(X, date, tree.id, batch, treatment, replicate, Y)%>%
  dplyr::summarise(avg.E_1=mean(E), avg.A_1=mean(A), avg.Ca_1=mean(Ca), avg.Ci_1=mean(Ci), avg.gsw_1=mean(gsw), avg.A.Ci_1=mean(A.Ci), avg.VPcham_1=mean(VPcham), avg.VPDleaf_1=mean(VPDleaf), avg.Q_1=mean(Q_out))%>%
  as.data.frame()

# calculating average of measurements for each tree on each day
licor_avg_2 <- licor_avg_1%>%
  group_by(Y, date, tree.id, batch, treatment)%>%
  dplyr::summarise(avg.E_2=mean(avg.E_1), avg.A_2=mean(avg.A_1), avg.Ca_2=mean(avg.Ca_1), avg.Ci_2=mean(avg.Ci_1), avg.gsw_2=mean(avg.gsw_1), avg.A.Ci_2=mean(avg.A.Ci_1), avg.VPcham_2=mean(avg.VPcham_1), avg.VPDleaf_2=mean(avg.VPDleaf_1), avg.Q_2=mean(avg.Q_1))%>%
  as.data.frame()

View(licor_avg_2)

# remove batch 3 + batch is an ordered factor
licor_avg_2 <- subset(licor_avg_2, licor_avg_2$batch != "3")
licor_avg_2$batch <- factor(licor_avg_2$batch)
View(licor_avg_2)

# GAS EXCHANGE ~ BATCH + TREATMENT
library(rcompanion)
citation("rcompanion")
# ANOVA (parametric test) - all significant

#E
aov_E.2 <- aov(log(licor_avg_2$avg.E_2) ~ licor_avg_2$batch + licor_avg_2$treatment)
summary(aov_E.2)
plot(aov_E.2) 

#gsw
aov_gsw.2 <- aov(log(licor_avg_2$avg.gsw_2) ~ licor_avg_2$batch + licor_avg_2$treatment)
summary(aov_gsw.2)
plot(aov_gsw.2)

#A/Ci
aov_A.Ci <- aov(licor_avg_2$avg.A.Ci_2 ~ licor_avg_2$batch + licor_avg_2$treatment)
summary(aov_A.Ci) 
par(mfrow=c(2,2))
plot(aov_A.Ci)

# alternative to ANOVA: Scheirer–Ray–Hare test (nonparametric test used for two-way factorial design) - all significant
#A
SRH_A <- scheirerRayHare(avg.A_2 ~ batch + treatment, data=licor_avg_2)
SRH_A

library(ggplot2)
install.packages("ggtext")
install.packages("tidyverse")
library(tidyverse)
library(ggtext)
SRH_A_plot <- ggplot(licor_avg_2,
                     aes(x=treatment,
                         y=avg.A_2))+
  geom_boxplot()+
  ggtitle("")+
  labs(x= "Treatment", y= expression(paste("Assimilation (μmol m"^"-2","s"^"-1)")))+ theme_classic() # short description (median, quartiles) - R info

SRH_A_plot <- ggplot(licor_avg_2,
                     aes(x=treatment,
                         y=avg.A_2))+
  geom_boxplot()+
  ggtitle("")+
  xlab("Treatment")+
  ylab(bquote('Assimilation ('*mu~ 'mol' ~m^{"-2"} ~s^-1*')'))+ theme_classic() # short description (median, quartiles) - R info

xlab(bquote('Assimilation ('*mu~ 'mol' ~Ca^{"2+"} ~ m^-2~s^-1*')'))


#E
SHR_E <- scheirerRayHare(avg.E_2 ~ batch + treatment, data=licor_avg_2)
SHR_E

SRH_E_plot <- ggplot(licor_avg_2,
                     aes(x=treatment,
                         y=avg.E_2))+
  geom_boxplot()+
  ggtitle("") +
  xlab("Treatment") + ylab("Evapotranspiration")+ theme_classic()

SRH_E_plot <- ggplot(licor_avg_2,
                     aes(x=treatment,
                         y=avg.E_2))+
  geom_boxplot()+
  ggtitle("") +
  xlab("Treatment") + ylab(bquote('Evapotranspiration ('*'mol' ~m^{"-2"} ~s^-1*')'))+ theme_classic()


#gsw
SHR_gsw <- scheirerRayHare(avg.gsw_2 ~ batch + treatment, data=licor_avg_2)
SHR_gsw

SRH_gsw_plot <- ggplot(licor_avg_2,
                       aes(x=treatment,
                           y=avg.gsw_2))+
  geom_boxplot()+
  ggtitle("") +
  xlab("Treatment") + ylab('Stomatal condutance ('*'mol' ~m^{"-2"} ~s^-1*')')+ theme_classic()


#A/Ci
SHR_A.Ci <- scheirerRayHare(avg.A.Ci_2 ~ batch + treatment, data=licor_avg_2)
SHR_A.Ci

SRH_A.Ci_plot <- ggplot(licor_avg_2,
                        aes(x=treatment,
                            y=avg.A.Ci_2))+
  geom_boxplot()+
  ggtitle("") +
  xlab("Treatment") + ylab('A/Ci ('*mol ~m^{"-2"} ~s^-1*')')+ theme_classic()

# subsets (individual batches)
licor_avg_b1 <- subset(licor_avg_2, licor_avg_2$batch == "1")
View(licor_avg_b1)
licor_avg_b2 <- subset(licor_avg_2, licor_avg_2$batch == "2")
licor_avg_b4 <- subset(licor_avg_2, licor_avg_2$batch == "4")

# Kruskal Wallis test to see if individual batches are significant
kr_1 <- kruskal.test(licor_avg_b1$avg.A.Ci_2 ~ licor_avg_b1$treatment) # p-value=0.1 
kr_1
kr_2 <- kruskal.test(licor_avg_b2$avg.A.Ci_2 ~ licor_avg_b2$treatment) # p-value=0.37
kr_2
kr_4 <- kruskal.test(licor_avg_b4$avg.A.Ci_2 ~ licor_avg_b4$treatment) # p-value=0.01
kr_4

kr_pro <- kruskal.test(licor_avg_b4$avg.A_2 ~ licor_avg_b4$treatment) 
kr_pro

kr_pro <- kruskal.test(licor_avg_b4$avg.E_2 ~ licor_avg_b4$treatment)


kr_pro <- kruskal.test(licor_avg_b4$avg.gsw_2 ~ licor_avg_b4$treatment)


#######################################################
# generalized linear model: we have to check distribution first

hist(licor_avg_2$avg.A_2, 
     breaks=8,
     main = "",
     xlab= bquote('Assimilation ('*mu~ 'mol' ~m^{"-2"} ~s^-1*')'))

hist(licor_avg_2$avg.E_2,
     breaks=8,
     main= "Histogram for Evapotranspiration") #gamma distribution?

hist(licor_avg_2$avg.gsw_2,
     breaks=8,
     main= "Histogram for stomatal conductance") #gamma distribution?

hist(licor_avg_2$avg.A.Ci_2,
     breaks=12,
     main= "Histogram for A/Ci")


#SOIL TEMPERATURE
# days where we measured the temperature should match with days where we measured gas exchange values in the dataframe

temp <- read.table("data/CR1000X_Yann_XinCooling.dat", header=TRUE, sep=",", skip=3, na.strings = "NAN")

#removing days before and after measurements
temp_2 <- temp[-c(1:40418, 273468:306236), ]

colnames(temp_2) <- c('Date', 'N', 'Min', 'Smp', 'cool1', 'cool2', 'cool3', 'contr1', 'contr2')

#date separated from time
library(stringr)
temp_2[c('date', 'time')] <- str_split_fixed(temp_2$Date, ' ', 2)

#changing date format
temp_2$date <- as.Date(temp_2$date, format = "%Y-%m-%d")
temp_2$date <- format(temp_2$date, "%d/%m/%Y")

#calculating average for temperature values (each day)
temp_3 <- temp_2%>%
  group_by(date)%>%
  dplyr::summarise(Smp=mean(Smp), cool1=mean(cool1), cool2=mean(cool2), cool3=mean(cool3), contr1=mean(contr1), contr2=mean(contr2))%>%
  as.data.frame()

#order by date
temp_3 <- temp_3[order(as.Date(temp_3$date, format="%d/%m/%Y")), ]

#on 13/7 we measured 2 batches (batch 1 in the morning and 2 in the afternoon): we need 2 values of mean 
mean(temp[115163:118066,5])
mean(temp[115163:118066,6])
mean(temp[115163:118066,7])
mean(temp[115163:118066,8])
mean(temp[115163:118066,9])

mean(temp[118067:120922,5])
mean(temp[118067:120922,6])
mean(temp[118067:120922,7])
mean(temp[118067:120922,8])
mean(temp[118067:120922,9])

# keeping only the days during which we measured gas exchange
temp_4 <- temp_3[temp_3$date %in% c('30/06/2023', '03/07/2023', '04/07/2023', '10/07/2023', '13/07/2023', '19/07/2023', '21/07/2023', '25/07/2023', '28/07/2023', '01/08/2023', '04/08/2023', '07/08/2023', '09/08/2023', '10/08/2023'), ]
View(temp_4)

#new column for soil temperature, with mean values for each day and each tree
licor_avg_2$soil_temperature <- c(5.165599, 5.244229, 6.994229, 2.634512, 3.064366, 17.08293, 16.39777, 3.684478, 2.368306, 3.565989, 3.070011, 1.980472, 3.364987, 16.68514, 15.79022, 5.792202, 21.93107, 4.238358, 23.07499, 3.383498, 3.13424, 4.337276, 5.644117, 5.697607, 3.102319, 6.945484, 24.66709, 25.19100, 24.82654, 24.27996, 3.331607, 2.011076, 3.165969, 25.47543, 26.42160, 4.064173, 2.589215, 4.854806, 8.183644, 5.437522, 33.75890, 33.67237, 7.398282, 8.350280, 5.978569, 7.078955, 5.985372, 6.020313, 24.60876, 24.56076)
View(licor_avg_2)

# GAS EXCHANGE VS SOIL TEMPERATURE

# gamma distribution 

#A - significant
gammaA <- glm(formula = licor_avg_2$avg.A_2 ~ licor_avg_2$batch + licor_avg_2$soil_temperature, family = Gamma(), data = licor_avg_2)
summary(gammaA) # 2.81e-05 ***
anova(gammaA) # 2 df
EP <- resid(gammaA, type = "pearson")
ED <- resid(gammaA, type = "deviance")
mu <- predict(gammaA, type = "response")
E <- licor_avg_2$avg.A_2 - mu
EP2 <- E / sqrt(0.2150349 * mu) # overdispersion parameter is taken from the summary (as explained in subsection 9.9 from Zuur 2009)
op <- par(mfrow = c(2, 2))
plot(x = mu, y = E, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2, main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals")
par(op) # no pattern
dev.off()

#plot without cooled/ control distinction
gammaA_plot <- ggplot(licor_avg_2,
                      aes(x=soil_temperature,
                          y=avg.A_2))+
  geom_point(na.rm=T)+
  geom_smooth(method = "glm", se = F, method.args = list(family = "Gamma"))+
  ggtitle("Plot of CO2 assimilation by soil temperature") +
  xlab("Soil temperature") + ylab("Assimilation")+ theme_classic()

library(ggplot2)
final_plot_A <-ggplot(licor_avg_2, aes(x=soil_temperature)) + 
  geom_point(aes(y = avg.A_2, colour = as.factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = avg.A_2, colour = as.factor(batch)), method = "glm", se = F, method.args = list(family = "Gamma"))+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Soil temperature (° C)", y = bquote('Assimilation ('*mu~ 'mol' ~m^{"-2"} ~s^-1*')'), shape = "Treatment", colour = "Batch")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

#library(ggplot2)
#ggplot_build(final_plot_A)
#install.packages("gridExtra")
#library(gridExtra)
#grid.arrange(gammaA_plot, gammaA_plot_1, nrow=1)

# individual batches - are these still ok?
gammaA_b1 <- glm(avg.A_2[licor_avg_2$batch == "1"] ~ licor_avg_2$soil_temperature[licor_avg_2$batch == "1"], data=licor_avg_2, family=Gamma())
summary(gammaA_b1) # 0.01

gammaA_b2 <- glm(avg.A_2[licor_avg_2$batch == "2"] ~ licor_avg_2$soil_temperature[licor_avg_2$batch == "2"], data=licor_avg_2, family=Gamma())
summary(gammaA_b2) # 0.01

gammaA_b4 <- glm(avg.A_2[licor_avg_2$batch == "4"] ~ licor_avg_2$soil_temperature[licor_avg_2$batch == "4"], data=licor_avg_2, family=Gamma())
summary(gammaA_b4) # 0.009

#E - significant

#trying gam
#mgcv
install.packages("mgcv")
library(mgcv)
citation("mgcv")
#gamE2 <- gam(licor_avg_2$avg.E_2 ~ s(licor_avg_2$soil_temperature, fx = FALSE, k=3, bs = "cr") + s(licor_avg_2$batch, fx = FALSE, k=3, bs = "cr"))
gamE <- gam(licor_avg_2$avg.E_2 ~ s(licor_avg_2$soil_temperature, k=3, bs = "cs") + s(licor_avg_2$batch, k=3, bs = "cs"))
summary(gamE)
anova(gamE)

#example (delete)
gam(y ~ user_id + s(speed, by = user_id) +
      s(length, by = user_id) +
      s(price, by = user_id),
    data1, method = "REML")

# 3
#gam.check(gamE2) # just 1 plot

# plot validation
install.packages("mgcViz")
library(mgcViz)
gamE <- getViz(gamE)
check(gamE) # 4 plots! pattern in 3rd plot; 4th should be a straight line: ok

# alternate version
gamE_ <- gam(licor_avg_2$avg.E_2 ~ licor_avg_2$batch + s(licor_avg_2$soil_temperature, by=licor_avg_2$batch))
summary(gamE_)
anova(gamE_)
# validation does not work anymore
gamE_ <- getViz(gamE_)
check(gamE_) # 7.65e-06 ***; 3.46e-05 ***; 0.0029 ** 

#plot with mgcv

#without cooled/ control distinction
gamE_plot_1 <- ggplot(licor_avg_2,
                      aes(x=soil_temperature,
                          y=avg.E_2))+
  geom_point(na.rm=T)+
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se=FALSE)+
  ggtitle("Plot of CO2 evapotranspiration by soil temperature") +
  xlab("Soil temperature") + ylab("Evapotranspiration")+ theme_classic()

final_plot_E <-ggplot(licor_avg_2, aes(x=soil_temperature)) + 
  geom_point(aes(y = avg.E_2, colour = factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = avg.E_2, colour = factor(batch)), method = "gam", formula = y ~ s(x, bs = "cs"), se = F, na.rm = T)+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Soil temperature (° C)", y = bquote('Evapotranspiration ('*'mol' ~m^{"-2"} ~s^-1*')'), shape = "Treatment", colour = "Batch")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

# individual batches
library(mgcv)
gamE_b1 <- gam(licor_avg_2$avg.E_2[licor_avg_2$batch == "1"] ~  s(licor_avg_2$soil_temperature[licor_avg_2$batch == "1"], k=3, bs = "cs"))
summary(gamE_b1) # 

gamE_b2 <- gam(licor_avg_2$avg.E_2[licor_avg_2$batch == "2"] ~  s(licor_avg_2$soil_temperature[licor_avg_2$batch == "2"], k=3, bs = "cs"))
summary(gamE_b2)

gamE_b4 <- gam(licor_avg_2$avg.E_2[licor_avg_2$batch == "4"] ~  s(licor_avg_2$soil_temperature[licor_avg_2$batch == "4"], k=3, bs = "cs"))
summary(gamE_b4)


#gsw (conductance stomatal water) - significant

#trying gam
gamgsw2 <- gam(licor_avg_2$avg.gsw_2 ~ s(licor_avg_2$soil_temperature, fx = FALSE, k=-1, bs = "cr"))
gamgsw <- gam(licor_avg_2$avg.gsw_2 ~ s(licor_avg_2$soil_temperature, k=3, bs = "cs") + s(licor_avg_2$batch, k=3, bs = "cs"))
summary(gamgsw)
gamgsw2 <- getViz(gamgsw2)
check(gamgsw2)

# alternative version with batch as factor
gamgsw_ <- gam(licor_avg_2$avg.gsw_2 ~ licor_avg_2$batch + s(licor_avg_2$soil_temperature, by=licor_avg_2$batch))
summary(gamgsw_) # 3.51e-07 ***; 3.76e-06 ***; 0.000799 ***
gamgsw_ <- getViz(gamgsw_)
check(gamgsw_)

scatter_plotgsw <- ggplot(licor_avg_2,
                          aes(x=soil_temperature,
                              y=avg.gsw_2))+ geom_point(na.rm=T)

# plot with mgcv

#without cooled/ control distinction
gamgsw_plot_1 <- ggplot(licor_avg_2,
                        aes(x=soil_temperature,
                            y=avg.gsw_2))+
  geom_point(na.rm=T)+
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se=FALSE)+
  ggtitle("Plot of stomatal conductance by soil temperature") +
  xlab("Soil temperature") + ylab("Stomatal conductance")+ theme_classic()


final_plot_gsw <-ggplot(licor_avg_2, aes(x=soil_temperature)) + 
  geom_point(aes(y = avg.gsw_2, colour = factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = avg.gsw_2, colour = factor(batch)), method = "gam", formula = y ~ s(x, bs = "cs"),na.rm = T, se = FALSE)+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Soil temperature (° C)", y = bquote('Stomatal conductance ('*'mol' ~m^{"-2"} ~s^-1*')'), shape = "Treatment", colour = "Batch")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

# individual batches
gamgsw_b1 <- gam(licor_avg_2$avg.gsw_2[licor_avg_2$batch == "1"] ~  s(licor_avg_2$soil_temperature[licor_avg_2$batch == "1"], k=3, bs = "cs"))
summary(gamgsw_b1)

gamgsw_b2 <- gam(licor_avg_2$avg.gsw_2[licor_avg_2$batch == "2"] ~  s(licor_avg_2$soil_temperature[licor_avg_2$batch == "2"], k=3, bs = "cs"))
summary(gamgsw_b2)

gamgsw_b4 <- gam(licor_avg_2$avg.gsw_2[licor_avg_2$batch == "4"] ~  s(licor_avg_2$soil_temperature[licor_avg_2$batch == "4"], k=3, bs = "cs"))
summary(gamgsw_b4)

#A/Ci - significant
gammaA.Ci <- glm(formula = licor_avg_2$avg.A.Ci_2 ~ licor_avg_2$batch + licor_avg_2$soil_temperature, family = Gamma(), data = licor_avg_2)
summary(gammaA.Ci) #0.03847 *
EP <- resid(gammaA.Ci, type = "pearson")
ED <- resid(gammaA.Ci, type = "deviance")
mu <- predict(gammaA.Ci, type = "response")
E_A.Ci <- licor_avg_2$avg.A.Ci_2 - mu
EP2 <- E_A.Ci / sqrt(0.1589045 * mu)
op <- par(mfrow = c(2, 2))
plot(x = mu, y = E_A.Ci, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2, main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals")
par(op) 

final_plot_A.Ci <-ggplot(licor_avg_2, aes(x=soil_temperature)) + 
  geom_point(aes(y = avg.A.Ci_2, colour = factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = avg.A.Ci_2, colour = factor(batch)), method = "glm", se = F, method.args = list(family = "Gamma"), na.rm = T)+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Soil temperature (° C)", y = bquote('A/Ci ('*mol ~m^{"-2"} ~s^-1*')'), shape = "Treatment", colour = "Batch")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))+
   guides(shape = guide_legend(override.aes = list(size=2.5)))

# individual batches
gammaA.Ci_b1 <- glm(avg.A.Ci_2[licor_avg_2$batch == "1"] ~ licor_avg_2$soil_temperature[licor_avg_2$batch == "1"], data=licor_avg_2, family=Gamma())
summary(gammaA.Ci_b1)

gammaA.Ci_b2 <- glm(avg.A.Ci_2[licor_avg_2$batch == "2"] ~ licor_avg_2$soil_temperature[batch == "2"], data=licor_avg_2, family=Gamma())
summary(gammaA.Ci_b2)

gammaA.Ci_b4 <- glm(avg.A.Ci_2[licor_avg_2$batch == "4"] ~ licor_avg_2$soil_temperature[batch == "4"], data=licor_avg_2, family=Gamma())
summary(gammaA.Ci_b4)

#order by soil temp 
licor_avg_st <- licor_avg_b1[order(licor_avg_b1$soil_temperature),]
licor_avg_st2 <- licor_avg_b2[order(licor_avg_b2$soil_temperature),]
licor_avg_st3 <- licor_avg_b4[order(licor_avg_b4$soil_temperature),]
View(licor_avg_st)
View(licor_avg_st2)

### WATER POTENTIAL

w_pot <- read.csv("data/leafpsi_2023.csv", sep = ";", header = TRUE, dec =",")

#keeping only the days where we also measured water potential
licor_avg_3 <- licor_avg_2[licor_avg_2$date %in% c('04/07/2023','10/07/2023', '19/07/2023', '21/07/2023', '25/07/2023', '10/08/2023'), ] 


#cutting dates I don't need (all 12/07 + 25/07 for BQ5 + batch 3)
w_pot_2 <- w_pot[-c(11:15, 29, 31:40), ] 

# ordering by tree id
w_pot_2 <- w_pot_2[order(w_pot_2$TreeID), ]
licor_avg_3 <- licor_avg_3[order(licor_avg_3$tree.id), ]
View(licor_avg_3)

#adding column for water potential to licor data
licor_avg_3$water_potential <- w_pot_2$psi_avg
View(licor_avg_3)

#making every value in the w pot column negative 
licor_avg_3$water_potential <- licor_avg_3$water_potential *(-1)

#cut this!
licor_avg_3$water_potential <- c(13.06, 13.56, 11.58, 13.02, 10.07, 10.55, 9.03, 9.55, 11.03, 10.54, 6.55, 7.08, 7.53, 7.52, 8.05, 7.59, 8.55, 9.02, 8.52, 8.50, 10.05, 12.00, 9.03, 7.51, 7.55, 8.56, 9.05, 10.06, 10.03)
licor_avg_3$water_potential_2 <- c(13.06, 13.56, 11.58, 13.02, 10.07, 10.55, 9.03, 9.55, 11.03, 10.54, 6.55, 7.08, 7.53, 7.52, 8.05, 7.59, 8.55, 9.02, 8.52, 8.50, 10.05, 12.00, 9.03, 7.51, 7.09, 7.05, 7.55, 8.56, 9.05, 10.06, 10.03)

View(licor_avg_3)

# GAS EXCHANGE VS WATER POTENTIAL

# gamma distribution 

#A - significant
gammaA2 <- glm(licor_avg_3$avg.A_2 ~ licor_avg_3$batch + licor_avg_3$water_potential, data=licor_avg_3, family=Gamma())
summary(gammaA2) # 0.004673 **
anova(gammaA2)
EP <- resid(gammaA2, type = "pearson")
ED <- resid(gammaA2, type = "deviance")
mu <- predict(gammaA2, type = "response")
E_ <- licor_avg_3$avg.A_2 - mu
EP2 <- E_ / sqrt(0.2461634 * mu)  
op <- par(mfrow = c(2, 2))
plot(x = mu, y = E_, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2, main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals")
par(op)

#individual batches
gammaA2_1 <- glm(licor_avg_3$avg.A_2[licor_avg_3$batch == "1"] ~ licor_avg_3$water_potential[licor_avg_3$batch == "1"], data=licor_avg_3, family=Gamma())
summary(gammaA2_1) # not sign (nessuno dei 3)
# 0.0727 . 

gammaA2_2 <- glm(licor_avg_3$avg.A_2[licor_avg_3$batch == "2"] ~ licor_avg_3$water_potential[licor_avg_3$batch == "2"], data=licor_avg_3, family=Gamma())
summary(gammaA2_2) # 0.22

gammaA2_3 <- glm(licor_avg_3$avg.A_2[licor_avg_3$batch == "4"] ~ licor_avg_3$water_potential[licor_avg_3$batch == "4"], data=licor_avg_3, family=Gamma())
summary(gammaA2_3) # 0.17


# just controls - sign
licor_avg_5 <- subset(licor_avg_3, licor_avg_3$treatment != "cooled") 
View(licor_avg_5)

gammaA2 <- glm(avg.A_2 ~ licor_avg_5$batch + licor_avg_5$water_potential, data=licor_avg_5, family=Gamma())
summary(gammaA2) #0.041319 * 

# each batch - not sign
gammaA2_1 <- glm(avg.A_2[licor_avg_5$batch == "1"] ~ water_potential[licor_avg_5$batch == "1"], data=licor_avg_5, family=Gamma())
summary(gammaA2_1) # 0.202

gammaA2_1 <- glm(avg.A_2[licor_avg_5$batch == "2"] ~ water_potential[licor_avg_5$batch == "2"], data=licor_avg_5, family=Gamma())
summary(gammaA2_1) #0.28980


#plot

plot_A2 <- ggplot(licor_avg_3,
                       aes(x=water_potential,
                           y=avg.A_2))+
  geom_point()+
  geom_smooth(method = "glm", se = F, method.args = list(family = "Gamma"))+
  ggtitle(" ")+
  labs(x = "Water potential (bars)", y = bquote('Assimilation ('*mu~ 'mol' ~m^{"-2"} ~s^-1*')'), colour = "Treatment")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

# batch 
gammaA_batch_2 <- ggplot(licor_avg_3,
                         aes(x=water_potential,
                             y=avg.A_2,
                             color=factor(batch)))+
  geom_point()+
  geom_smooth(method = "glm", se = F, method.args = list(family = "Gamma"))+
  ggtitle("Plot of CO2 assimilation by water potential")+
  xlab("Water potential") + ylab("Assimilation")+
  guides(colour = guide_legend(override.aes = list(shape = NA)))

# regression driven by batches (batch 1 very high, batch 4 very low)
# symbols for both batch and treatment (3x2)
library(ggplot2)
# plot with 3 batches (no regr line)
final_plot_Aw <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.A_2, colour = as.factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = avg.A_2, colour = as.factor(batch)), method = "glm", se = F, method.args = list(family = "Gamma"))+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Water potential (bar)", y = bquote('Assimilation ('*mu~ 'mol' ~m^{"-2"} ~s^-1*')'), colour = "Batch (colour)", shape = "Treatment (shape)")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

# control vs cooled
final_plot_Aw <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.A_2, colour = treatment)) + 
  stat_smooth(aes(y = avg.A_2, colour = treatment), method = "glm", se = F, method.args = list(family = "Gamma"))+
  labs(x = "Water potential", y = bquote('Assimilation ('*mu~ 'mol' ~m^{"-2"} ~s^-1*')'), colour = "Treatment")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA))) # plot cooled and control trees separately + merge batches

# E - significant 
#gamEw2 <- gam(licor_avg_3$avg.E_2 ~ s(licor_avg_3$water_potential, fx = FALSE, k=-1, bs = "cr"))
gamEw <- gam(licor_avg_3$avg.E_2 ~ s(licor_avg_3$batch, k=3, bs = "cs") + s(licor_avg_3$water_potential, k=3, bs = "cs"))
summary(gamEw)
gamEw <- getViz(gamEw)
check(gamEw)
library(mgcv)
# alternative version for batch as factor
gamEw <- gam(licor_avg_3$avg.E_2 ~ licor_avg_3$batch + s(licor_avg_3$water_potential, by=licor_avg_3$batch))
summary(gamEw)
gamEw <- getViz(gamEw)
check(gamEw) # 0.0107 * 0.0611 . 0.2192

# just controls
gamEw <- gam(licor_avg_5$avg.E_2 ~ licor_avg_5$batch + s(licor_avg_5$water_potential, by=licor_avg_5$batch))
summary(gamEw)


# scatter plot with E and water potential 
scatter_plotE2 <- ggplot(licor_avg_3,
                         aes(x=water_potential,
                             y=avg.E_2))+ geom_point(na.rm=T)

gammaE_batch_2 <- ggplot(licor_avg_3,
                         aes(x=water_potential,
                             y=avg.E_2,
                             color=factor(batch)))+
  geom_point()+
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = F, na.rm = T)+
  ggtitle("Plot of E by water potential") +
  xlab("Water potential") + ylab("E")

final_plot_Ew <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.E_2, colour = as.factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = avg.E_2, colour = as.factor(batch)), method = "gam", formula = y ~ s(x, bs = "cs", k=5),na.rm = T, se=F)+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Water potential (bar)", y = bquote('Evapotranspiration ('*'mol' ~m^{"-2"} ~s^-1*')'), colour = "Batch (colour)", shape = "Treatment (shape)")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = 'square')))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

# control vs cooled
final_plot_Ew <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.E_2, colour = treatment)) + 
  stat_smooth(aes(y = avg.E_2, colour = treatment), method = "gam", formula = y ~ s(x, bs = "cs"),na.rm = T, se=F)+
  labs(x = "Water potential", y = bquote('Evapotranspiration ('*'mol' ~m^{"-2"} ~s^-1*')'), colour = "Treatment")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))

# gsw - significant
gamgsww <- gam(licor_avg_3$avg.gsw_2 ~ s(licor_avg_3$water_potential, k=3, bs = "cs") + s(licor_avg_3$batch, k=3, bs = "cs"))
summary(gamgsww)
gamgsww <- getViz(gamgsww)
check(gamgsww)

gamgsww <- gam(licor_avg_3$avg.gsw_2 ~ licor_avg_3$batch + s(licor_avg_3$water_potential, by=licor_avg_3$batch))
summary(gamgsww)
gamgsww <- getViz(gamgsww)
check(gamgsww) #0.00632 ** 0.09968 . 0.26244

# just controls
gamgsww <- gam(licor_avg_5$avg.gsw_2 ~ licor_avg_5$batch + s(licor_avg_5$water_potential, by=licor_avg_5$batch))
summary(gamgsww)

scatter_plotgsw2 <- ggplot(licor_avg_3,
                           aes(x=water_potential,
                               y=avg.gsw_2))+ geom_point(na.rm=T)
library(ggplot2)
final_plot_gsww <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.gsw_2, colour = as.factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Water potential (bars)", y = bquote('Stomatal conductance ('*'mol' ~m^{"-2"} ~s^-1*')'), colour = "Batch (colour)", shape = "Treatment (shape)")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = 'square')))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))


final_plot_gsww <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.gsw_2, colour = treatment)) + 
  stat_smooth(aes(y = avg.gsw_2, colour = treatment), method = "gam", formula = y ~ s(x, bs = "cs"),na.rm = T, se=F)+
  labs(x = "Water potential", y = 'Stomatal conductance ('*'mol' ~m^{"-2"} ~s^-1*')', colour = "Treatment")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))


#A/Ci - not significant
gammaA.Ci2 <- glm(licor_avg_3$avg.A.Ci_2 ~ licor_avg_3$batch + licor_avg_3$water_potential, data=licor_avg_3, family=Gamma())
summary(gammaA.Ci2) # 0.25387  
anova(gammaA.Ci2) # 2 df
EP <- resid(gammaA.Ci2, type = "pearson")
ED <- resid(gammaA.Ci2, type = "deviance")
mu <- predict(gammaA.Ci2, type = "response")
E_ <- licor_avg_3$avg.A.Ci_2 - mu
EP2 <- E_ / sqrt(0.124749 * mu)  
op <- par(mfrow = c(2, 2))
plot(x = mu, y = E_, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2, main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals") # relabel
par(op)

gammaA.Ci2_1 <- glm(licor_avg_3$avg.A.Ci_2[licor_avg_3$batch == "1"] ~ licor_avg_3$water_potential[licor_avg_3$batch == "1"], data=licor_avg_3, family=Gamma())
summary(gammaA2_1) # not sign (nessuno dei 3)
#  0.462

gammaA.Ci2_2 <- glm(licor_avg_3$avg.A.Ci_2[licor_avg_3$batch == "2"] ~ licor_avg_3$water_potential[licor_avg_3$batch == "2"], data=licor_avg_3, family=Gamma())
summary(gammaA2_2) # 0.8067  

gammaA.Ci2_3 <- glm(licor_avg_3$avg.A.Ci_2[licor_avg_3$batch == "4"] ~ licor_avg_3$water_potential[licor_avg_3$batch == "4"], data=licor_avg_3, family=Gamma())
summary(gammaA.Ci2_3) # 0.32


# just controls
gammaA.Ci2 <- glm(avg.A.Ci_2 ~ licor_avg_5$batch + licor_avg_5$water_potential, data=licor_avg_5, family=Gamma())
summary(gammaA.Ci2) # significant (batch and w pot)

# batch 1
gammaA.Ci2 <- glm(avg.A.Ci_2[licor_avg_5$batch == "1"] ~ licor_avg_5$water_potential[licor_avg_5$batch == "1"], data=licor_avg_5, family=Gamma())
summary(gammaA.Ci2) # not sign

gammaA.Ci2_plot <- ggplot(licor_avg_3,
                          aes(x=water_potential,
                              y=avg.A.Ci_2))+
  geom_point()+
  geom_smooth(method = "glm", se = F, method.args = list(family = "Gamma"))

# with gam 
gamA.Ci2_plot <- ggplot(licor_avg_3,
                        aes(x=water_potential,
                            y=avg.A.Ci_2))+
  geom_point()+
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"))+
  ggtitle("Plot of CO2 assimilation by water potential") +
  xlab("Water potential") + ylab("A/Ci")


final_plot_A.Ciw <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.A.Ci_2, colour = as.factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Water potential (bar)", y = bquote('A/Ci ('*'mol' ~m^{"-2"} ~s^-1*')'), colour = "Batch (colour)", shape = "Treatment (shape)")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = 'square')))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))

final_plot_A.Ciw <-ggplot(licor_avg_3, aes(x=water_potential)) + 
  geom_point(aes(y = avg.A.Ci_2, colour = treatment)) + 
  stat_smooth(aes(y = avg.A.Ci_2, colour = treatment), method = "glm", se = F, method.args = list(family = "Gamma"))+
  labs(x = "Water potential", y = 'A/Ci ('*'mol' ~m^{"-2"} ~s^-1*')', colour = "Treatment")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))

gam_pot_soil <- gam(licor_avg_3$avg.A_2 ~ licor_avg_3$batch + licor_avg_3$water_potential*licor_avg_3$soil_temperature, data=licor_avg_3, family=Gamma())
summary(gammaA.Ci2)

### WATER POTENTIAL vs SOIL TEMPERATURE   
temp_5 <- temp_4[c(3,4,6:8, 10, 11, 14), ] # selecting only days we measured wat pot

# adding column to the water potential dataframe
w_pot_2$soil_temperature <- c(17.08293, 16.39777, 3.565989, 2.368306, 3.684478, 16.68514, 15.79022, 3.364987, 1.980472, 3.070011, 25.19100, 24.66709, 5.697607, 3.102319, 6.945484, 24.82654, 24.27996, 3.165969, 2.011076, 3.331607, 26.42160, 25.47543, 2.589215, 4.064173, 21.35902, 20.53549, 7.289648, 7.447564, 5.043627, 24.45840, 24.31986, 4.041999, 7.672780, 4.844551, 24.60876, 24.56076, 5.985372, 7.078955, 6.020313)
View(w_pot_2)

# distribution
hist(licor_avg_3$water_potential, 
     breaks=8,
     main= "Histogram for water potential")


# gamma distribution - not significant
gamma_wpot <- glm(licor_avg_3$soil_temperature ~ licor_avg_3$water_potential, data=licor_avg_3, family=Gamma())
summary(gamma_wpot) # 0.4462
EP <- resid(gamma_wpot, type = "pearson")
ED <- resid(gamma_wpot, type = "deviance")
mu <- predict(gamma_wpot, type = "response")
E_ <- licor_avg_3$soil_temperature - mu
EP2 <- E_ / sqrt(0.7352598 * mu)  
op <- par(mfrow = c(2, 2))
plot(x = mu, y = E_, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2, main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals")
par(op)

final_plot_temp_wat <-ggplot(licor_avg_3, aes(x=soil_temperature)) + 
  geom_point(aes(y = water_potential, colour = treatment)) + 
  stat_smooth(aes(y = water_potential, colour = treatment), method = "glm", se = F, method.args = list(family = "Gamma"))+
  labs(x = "Soil temperature (° C)", y = 'Water potential (bar)', colour = "Treatment")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = NA)))

final_plot_temp_wat <- ggplot(licor_avg_3, aes(x=soil_temperature)) + 
  geom_point(aes(y = water_potential, colour = as.factor(batch), shape = treatment),na.rm = T, size=2.5) + 
  stat_smooth(aes(y = water_potential, colour = as.factor(batch)), method = "glm", se = F, method.args = list(family = "Gamma"))+
  scale_shape_discrete(breaks=c("control", "cooled"),labels=c("control trees", "cooled trees"))+
  labs(x = "Soil temperature (° C)", y = 'Water potential (bar)', shape = "Treatment (shape)", colour = "Batch (colour)")+
  scale_colour_viridis_d(
    name = waiver(),
    alpha = 1,
    begin = 0,
    end = 1,
    direction = 1,
    option = "D",
    aesthetics = "colour")+ theme_classic()+
  guides(colour = guide_legend(override.aes = list(shape = 'square')))+
  guides(shape = guide_legend(override.aes = list(size=2.5)))
# delete batch as well?

gamma_interaction <- glm(licor_avg_3$avg.A_2 ~ licor_avg_3$soil_temperature*licor_avg_3$water_potential + licor_avg_3$batch, data=licor_avg_3, family=Gamma())
summary(gamma_interaction)
EP <- resid(gamma_interaction, type = "pearson")
ED <- resid(gamma_interaction, type = "deviance")
mu <- predict(gamma_interaction, type = "response")
E_ <- licor_avg_3$avg.A_2 - mu
EP2 <- E_ / sqrt(0.1322038 * mu)  
op <- par(mfrow = c(2, 2))
plot(x = mu, y = E_, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2, main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals")
par(op) # this is not very good


gam_<-(E~batch + WP * Ts)




